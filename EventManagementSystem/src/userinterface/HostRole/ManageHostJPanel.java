/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HostRole;

import Business.EcoSystem;
import Business.Host.Host;
import Business.Host.HostDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saivignesh Sridhar
 */
public class ManageHostJPanel extends javax.swing.JPanel {
    public HostDirectory hostDirectory;
    public JPanel container;
    public EcoSystem system;
    
    public ManageHostJPanel(JPanel userProcessContainer, EcoSystem system, HostDirectory hostDirectory) {
        initComponents();
        this.system = system;
        this.hostDirectory = hostDirectory;
        this.container = userProcessContainer;
        populateHostListTable();
    }
    
    public void populateHostListTable() {
        DefaultTableModel model = (DefaultTableModel) JTblHosts.getModel();
        model.setRowCount(0);
        for (UserAccount userAcc : system.getUserAccountDirectory().getUserAccountList()) {
            for (Host host : hostDirectory.getHostDir()) {
                if (host.getHostID().equalsIgnoreCase(userAcc.getEmployee().getName())) {
                    Object[] row = new Object[7];
                    row[0] = host.getHostID();
                    row[1] = userAcc.getUsername();
                    row[2] = host.getHostName();
                    row[3] = host.getHostContact();
                    row[4] = host.getHostEmail();
                    row[5] = host.getHostAddr();
                    row[6] = host.getHostZipCode();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTblHosts = new javax.swing.JTable();
        btnViewHost = new javax.swing.JButton();
        btnDelHost = new javax.swing.JButton();
        btnAddHost = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Hosts Database");

        JTblHosts.setBackground(new java.awt.Color(204, 255, 255));
        JTblHosts.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        JTblHosts.setForeground(new java.awt.Color(0, 51, 51));
        JTblHosts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Host No", "Username", "Name", "Contact No", "Email", "Street Address", "Zipcode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTblHosts);

        btnViewHost.setBackground(new java.awt.Color(204, 255, 255));
        btnViewHost.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnViewHost.setForeground(new java.awt.Color(0, 51, 51));
        btnViewHost.setText("View Host");
        btnViewHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHostActionPerformed(evt);
            }
        });

        btnDelHost.setBackground(new java.awt.Color(204, 255, 255));
        btnDelHost.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnDelHost.setForeground(new java.awt.Color(0, 51, 51));
        btnDelHost.setText("Delete Host");
        btnDelHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelHostActionPerformed(evt);
            }
        });

        btnAddHost.setBackground(new java.awt.Color(204, 255, 255));
        btnAddHost.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnAddHost.setForeground(new java.awt.Color(0, 51, 51));
        btnAddHost.setText("Add Host");
        btnAddHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHostActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(204, 255, 255));
        btnBack.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 51, 51));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(btnBack)
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewHost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddHost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(98, 98, 98)
                        .addComponent(btnDelHost)))
                .addContainerGap(305, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAddHost)
                    .addComponent(btnDelHost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewHost)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHostActionPerformed
        // TODO add your handling code here:
        int selectedRow = JTblHosts.getSelectedRow();
        int count = JTblHosts.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                CardLayout layout = (CardLayout) container.getLayout();
                Host host = hostDirectory.getHostId(selectedRow);
                ViewUpdateHostJPanel viewUpdateHostJPanel = new ViewUpdateHostJPanel(system, container, host, hostDirectory);
                container.add(viewUpdateHostJPanel);
                layout.next(container); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to continue.");
        }
    }//GEN-LAST:event_btnViewHostActionPerformed

    private void btnDelHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelHostActionPerformed
        // TODO add your handling code here:
        int selectedRow = JTblHosts.getSelectedRow();
        int count = JTblHosts.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {
                    hostDirectory.deleteHost(selectedRow, system);
                    populateHostListTable();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to continue.");
        }
    }//GEN-LAST:event_btnDelHostActionPerformed

    private void btnAddHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHostActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        AddHostJPanel createHostsJPanel = new AddHostJPanel(container, system, hostDirectory);
        container.add(createHostsJPanel);
        layout.next(container);
    }//GEN-LAST:event_btnAddHostActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTblHosts;
    private javax.swing.JButton btnAddHost;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelHost;
    private javax.swing.JButton btnViewHost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

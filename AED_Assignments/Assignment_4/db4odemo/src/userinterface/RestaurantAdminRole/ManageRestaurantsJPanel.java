/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saivignesh Sridhar
 */
public class ManageRestaurantsJPanel extends javax.swing.JPanel {
    public RestaurantDirectory restDirectory;
    public JPanel container;
    public EcoSystem system;
    /**
     * Creates new form ManageRestaurantsJPanel
     */
    public ManageRestaurantsJPanel(JPanel container, EcoSystem system, RestaurantDirectory restaurantDirectory) {
        initComponents();
        this.container = container;
        this.restDirectory = restaurantDirectory;
        this.system = system;
        populateRestaurantsTable();
        
    }
    
        public void populateRestaurantsTable() {
        DefaultTableModel model = (DefaultTableModel) JTblRestaurants.getModel();
        model.setRowCount(0);
        for (UserAccount userAcc : system.getUserAccountDirectory().getUserAccountList()) {
            for (Restaurant rest : restDirectory.getRestDirectory()) {
                if (rest.getRestNo().equalsIgnoreCase(userAcc.getEmployee().getName())) {
                    Object[] row = new Object[7];
                    row[0] = rest.getRestNo();
                    row[1] = rest.getRestName();
                    row[2] = rest.getRestManager();
                    row[3] = rest.getRestContact();
                    row[4] = rest.getRestEmail();
                    row[5] = rest.getRestAddress();
                    row[6] = rest.getRestZipCode();
                    model.addRow(row);
                }
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_RestDetails = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTblRestaurants = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnAddRest = new javax.swing.JButton();
        btnViewRest = new javax.swing.JButton();
        btnDelRest = new javax.swing.JButton();

        lbl_RestDetails.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lbl_RestDetails.setText("Restaurants Database");

        JTblRestaurants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Restaurant No", "Name", "Manager", "Contact No", "Email", "Street Address", "Zipcode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTblRestaurants);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddRest.setText("Add Restaurant");
        btnAddRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRestActionPerformed(evt);
            }
        });

        btnViewRest.setText("View Restaurant");
        btnViewRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRestActionPerformed(evt);
            }
        });

        btnDelRest.setText("Delete Restaurant");
        btnDelRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelRestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(lbl_RestDetails))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddRest)
                                .addGap(104, 104, 104)
                                .addComponent(btnDelRest))
                            .addComponent(btnViewRest))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_RestDetails)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAddRest)
                    .addComponent(btnDelRest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewRest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRestActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        AddRestaurantJPanel addRestJPanel = new AddRestaurantJPanel(container, system, restDirectory);
        container.add(addRestJPanel);
        layout.next(container);
    }//GEN-LAST:event_btnAddRestActionPerformed

    private void btnViewRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRestActionPerformed
        // TODO add your handling code here:
        int selectedRow = JTblRestaurants.getSelectedRow();
        int count = JTblRestaurants.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                CardLayout layout = (CardLayout) container.getLayout();
                Restaurant rest = restDirectory.getRestaurantNo(selectedRow);
                ViewUpdateRestJPanel viewUpdateRestPanel = new ViewUpdateRestJPanel( container, rest);
                container.add(viewUpdateRestPanel);
                layout.next(container);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to continue.");
        }
    }//GEN-LAST:event_btnViewRestActionPerformed

    private void btnDelRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelRestActionPerformed
        // TODO add your handling code here:
        int selectedRow = JTblRestaurants.getSelectedRow();
        int count = JTblRestaurants.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {
                    restDirectory.deleteRestaurant(selectedRow, system);
                    populateRestaurantsTable();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to continue.");
        }
    }//GEN-LAST:event_btnDelRestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTblRestaurants;
    private javax.swing.JButton btnAddRest;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelRest;
    private javax.swing.JButton btnViewRest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_RestDetails;
    // End of variables declaration//GEN-END:variables
}
